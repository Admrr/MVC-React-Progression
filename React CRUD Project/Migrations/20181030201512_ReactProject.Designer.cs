// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ReactProject.Model;

namespace ReactProject.Migrations
{
    [DbContext(typeof(DBContext))]
    [Migration("20181030201512_ReactProject")]
    partial class ReactProject
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.1.3-rtm-32065")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("ReactProject.Model.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("ReactProject.Model.Staff", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("BirthDate");

                    b.Property<int>("CompanyId");

                    b.Property<string>("Name");

                    b.Property<int>("Phone");

                    b.Property<int>("SSN");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("Staffs");
                });

            modelBuilder.Entity("ReactProject.Model.StaffTask", b =>
                {
                    b.Property<int>("StaffId");

                    b.Property<int>("TaskId");

                    b.HasKey("StaffId", "TaskId");

                    b.HasIndex("TaskId");

                    b.ToTable("StaffTasks");
                });

            modelBuilder.Entity("ReactProject.Model.Task", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<int>("Number");

                    b.HasKey("Id");

                    b.ToTable("Tasks");
                });

            modelBuilder.Entity("ReactProject.Model.Staff", b =>
                {
                    b.HasOne("ReactProject.Model.Company", "Company")
                        .WithMany("Staff")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ReactProject.Model.StaffTask", b =>
                {
                    b.HasOne("ReactProject.Model.Staff", "Staff")
                        .WithMany("StaffTask")
                        .HasForeignKey("StaffId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ReactProject.Model.Task", "Task")
                        .WithMany("StaffTask")
                        .HasForeignKey("TaskId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
